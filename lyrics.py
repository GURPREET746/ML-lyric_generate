# -*- coding: utf-8 -*-
"""lyrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/109VBWM2tRT1xcdEUgmN_qMkDRXZ-5-lF
"""

import requests

data = requests.get("https://raw.githubusercontent.com/coding-blocks-archives/ML-Noida-2019-June-Two/master/datasets/speeches/speech.txt")

data =data.text

data[:500]

#"hello hello helli helly helli hello"

#x.        y.        freq
#"hell"   'o'          3
#"ello"   ' '          1
#"hell".   'i'.        2
#"hell".   'y'.        1

def generateTransition(data,k =4):
  T ={}

  for i in range(len(data)-k):
    x = data[i: i+k]
    y = data[i+k]

    if T.get(x) is None:  #if input state is not in the dictionary
      T[x] = {} # intialise empty dictionary for that correseponding
      T[x][y] = 1 #freq =>1
    else:
      if T[x].get(y) is None: #if you already have input but not output
        T[x][y] = 1  
      else:
        T[x][y] += 1 #if you have input and output in the dictionary just increent the frequency
  return T

s= "hello hello helli helly helli hello"
generateTransition(s)

T= generateTransition(data.lower())

input = "country"

possible_chars=list(T[input[-4:]].keys())

possible_freq = list(T[input[-4:]].values())

#converting frequency to probabilities
probabs = []
for ele in possible_freq:
  x= ele/sum(possible_freq)
  probabs.append(x)

probabs

print(possible_chars)
print(probabs)

import numpy as np

pred=np.random.choice(possible_chars,p=probabs)

input = input+pred

input

for i in range(500):
  possible_chars=list(T[input[-4:]].keys())
  possible_freq = list(T[input[-4:]].values())
  probabs= [ele/sum(possible_freq) for ele in possible_freq] 
  pred= np.random.choice(possible_chars,p=probabs)
  input = input + pred

input

